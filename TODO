~/dev/py/xlattice_py/TODO

2017-01-10
    * replace QQQ.USING_SHAx with an enumeration (IntEnum)
    EDITED from -01-09:
    * replace xlattice.u.UDir.{DIR_FLAT,DIR16x16,DIR256x256} with       * DONE
        an enumeration UDir.DirStruc (an IntEnum)                       * DONE
        - widely used, so needs careful replacement plan
    * UStats.dir_struc(self, value) needs checks on value               * DONE
        - this could be dir_struc in [d.value for d in DirStruc]        * DONE

2017-01-09
    * add deprecation warnings on all synonyms
            import warnings
            warnings.warn('deprecated', DeprecationWarning)
        - xlattice/crypo.py                                             * DONE
        - xlattice/__init__.py                                          * DONE
        - xlattice/util.py                                              * DONE
    * synonyms should be dropped on second step of minor version number
        - first step  1.6                                               * SEEN
        - second step 1.7

2017-01-08
    * there is confusion over the handling of digital signatures:
        - test_pyca_rsa.py assumes that they will be base-64 encoded
        - test_pyca_node.py and xlattice/pyca_node do not use
            base64 encoding

2017-01-07
    * consider using blake2 as alternative hash

2017-01-06
    * need performance figures 
        - hashlib/sha* vs pyca/cryptography sha*

    * create pyca versions of test_node.py,                             * DONE
        xlattice/node.py                                                * DONE
    * add deprecation warnings 
            import warnings
            warnings.warn('deprecated', DeprecationWarning)
        - test_hello_and_reply.py
        - xlattice/hello_and_reply.py
        - test_node.py
        - xlattice/node.py
        - test_pkcs7.py
        - xlattice/pkcs7.py
        - test_rsa.py

2017-01-06, edited from -05
    * extend test_pyca_cryptography.py to test RSA encrytion            * DONE
        - create test_pyca_hello_and_reply,                             * DONE
            xlattice/pyca_hello_and_reply.py                            * DONE

2016-12-29
    * rename all RuntimeErrors in xlattice/crypto.py XLCryptoError      * DONE

2016-12-26
    * DIR_FLAT etc should be an enumeration (IntEnum); then use         * DONE
        .name to retrieve string form of names                          * DONE

2016-12-19
    * get rid of debug messages in xlattice/u/__init__.py
        (search on DO NOT REMOVE THIS CASUALLY)

2016-12-13
    * add code handling SHA{2,3} to gen_node_id
    * rearrange code to collect option collecting into get_args()
        - and various checks into check_args()
    * consider adding eg time-now to hash
    * move the executive code into the xlattice library
    * write test for library function
    * pylint it

2016-11-10, edited from -09
    * pyCrypto has not been supported since 2012.  cryptodome is        * DONE
        drop-in replacement.  sudo pip3 install cryptodome.             * DONE
        - THIS WAS A MISTAKE: it is *not* a drop-in replacement.        * YEP
        - uninstall pycryptodome                                        * DONE
        - install pycryptodomex, which does not overwrite pycrypto      * DONE
        - re-install pycrypto                                           * DONE

    * github/pyca/cryptography is candidate for replacement.
        - install                                                       * DONE
        - write substantial tests of relevant bits of all three
            packages

2016-10-04
    * README.md needs to be corrected for utilities                     * DONE
    * README also needs better explantion of the function of those
        uitlities

2016-10-24
    * rewrite gen_node_id{1,3} as conventional scripts using argparse   * DONE

2016-10-22
    * import of sha3 should be conditional: sys.version_info < (3, 6)

2016-10-11
    * uncomment test_u.py::map_test and get it running
    * UStats is skeletal
        - needs to be pylinted

2016-10-09
    * continue pylinting at xlattice/util and test_get_exclusions
    * checkCoverage is incorrectly configured - checks pycrypt,
        rnglib, etc

2016-09-15
    * documentation is ridiculously out of date
    * verifyContentKeys needs some attention

2016-09-15, edited from -06-03, edited from -02
    * the class UDir
        - the constructor should create L,
        - should also create tmp/ and in/ if these to not exist         * DONE
        - class need to run alongside the existing packages until
            class implementation is complete
    * then modify using projects to use UDir:
        - buildList
        - cljutil
        - bindex
        - magicsack     # modified to use u16
        - upax
    * document all of this
    * the separate packages uFlat, u16, and u256 should be dropped      * DONE
        when UDir is stable and all users converted                     * DONE

2016-09-09
    * verifyContentKeys does not handle SHA3
        - and otherwise not checked

2016-07-24
    * get rid of extra subdirs left by uReStruc                         * DONE
2016-07-20
    * DIR_FLAT etc should be a class attribute                          * DONE

2016-07-19
    * part of testUStats.py is stubbed; implement it
    * modify uStats to display discovered dirStruc and usingSHA1        * DONE
    * THINK ABOUT THIS: is there any problem with using SHAx_HEX_NONE
        as the signature for usingSHA1?

2016-07-19, edit from -18
    * write uReStruc, a tool to restructure a uDir directory to         * DONE
        a different dirStruc                                            * DONE
        - particular interest is in moving DIR_FLAT files into          * DONE
            DIR256x256 subdirectories                                   * DONE
        - pay attention to None files (used to discover whether         * DONE
            usingSHA1)                                                  * DONE
        - files that are in the right place should be left there        * DONE

2016-07-17
    * implement UDir.delete(key), where key is a hex value, returning   * DONE
        False if not present, True otherwise                            * DONE
    * test uDir.delete()

    * elaborate testing of UStats, getting code for building random
        directory tree from ../nlhtree_py/testDropFromU.py

2016-07-15
    * add UStats object with fields                                     * DONE
        - initially subDirCount, subSubDirCount, leafCount, oddCount,   * DONE
            bool hasL, bool hasNodeID                                   * DONE
        - then add minCount (init MAXINT, maxCount (init 0)             * DONE

2016-06-14
    * testU contains many debug comments, needs to be cleaned up

2016-06-03
    * testSHA3_256.py gets an import error                              * FIXED

    * the class UDir
        - the constructor should create L,
        - should also create tmp/ and in/ if these to not exist         * DONE
        - class need to run alongside the existing packages until
            class implementation is complete
    * then modify using projects to use UDir:
        - buildList
        - cljutil
        - bindex
        - magicsack     # modified to use u16
        - upax
    * document all of this
    * the separate packages uFlat, u16, and u256 should be dropped      * DONE
        when UDir is stable and all users converted                     * DONE

2016-09-09
    * verifyContentKeys does not handle SHA3
        - and otherwise not checked

2016-07-24
    * get rid of extra subdirs left by uReStruc                         * DONE
2016-07-20
    * DIR_FLAT etc should be a class attribute                          * DONE

2016-07-19
    * part of testUStats.py is stubbed; implement it
    * modify uStats to display discovered dirStruc and usingSHA1        * DONE
    * THINK ABOUT THIS: is there any problem with using SHAx_HEX_NONE
        as the signature for usingSHA1?

2016-07-19, edit from -18
    * write uReStruc, a tool to restructure a uDir directory to         * DONE
        a different dirStruc                                            * DONE
        - particular interest is in moving DIR_FLAT files into          * DONE
            DIR256x256 subdirectories                                   * DONE
        - pay attention to None files (used to discover whether         * DONE
            usingSHA1)                                                  * DONE
        - files that are in the right place should be left there        * DONE

2016-07-17
    * implement UDir.delete(key), where key is a hex value, returning   * DONE
        False if not present, True otherwise                            * DONE
    * test uDir.delete()

    * elaborate testing of UStats, getting code for building random
        directory tree from ../nlhtree_py/testDropFromU.py

2016-07-15
    * add UStats object with fields                                     * DONE
        - initially subDirCount, subSubDirCount, leafCount, oddCount,   * DONE
            bool hasL, bool hasNodeID                                   * DONE
        - then add minCount (init MAXINT, maxCount (init 0)             * DONE

2016-06-14
    * testU contains many debug comments, needs to be cleaned up

2016-06-03
    * testSHA3_256.py gets an import error                              * FIXED

2016-06-03, edited from -02, edited from -05-11
    * access to the RNG object in xlattice.u.UDir should be
        synchronized

2016-05-10 (edited from 04-17)
    * need comprehensive testSha{1,2,3}.py
        - if possible, this is one big test, or test class with
            children = subclasses

    * need test functions to create randomish
        - u256x256 directories with or without in/, tmp/, L
        - ditto for u16x16
        - ditto for uFLAT

    * this is or could be a library extending rnglib

2016-05-03
    * need uCmp: compares uDirs, for use in testing

2016-04-19
    * testRegexesFromWildcars overlaps with testGetExclusions; fix

2016-04-18
    * uPreen should scan for file name/content key mismatches
        - will be much slower

2016-04-16
    * need utility uWriteable to make all leaf files in U read-only
    * need utility uReadOnly  to make all leaf files in U read-write
    * uConsolidate needs -V/--version option

2016-04-07 (edited from -06)
    * ProcLock should be more 'atomic':
        - write lock file under a different name
        - then rename it to proper name (shortens race period);
        - could read it after creation to confirm PID is as expected
            * raise exception if it fails
        - similary rename it before deleting it
    * eventually need 2-phase lock (lock A,B,C, unlock C,B,A)
        - and a lock daemon

    * need tests for xlattice/u                                         * DONE
2015-05-14
    * myData/ myU1/ myU2 need to be added to .gitignore,
        which requires a .gitignore-local functionality
    * move SHA1* constants to xlattice package                          * DONE
    * need test for xlattice.ui (passwdStrength)
2015-05-11
    * gittifyProject.sh  xlattice_py >& junk.gittify                    * DONE
    * ghpTheProject.sh   xlattice_py >& junk.ghp                        * DONE
        - seems OK but index.html at jddixon.github.io/xlattice_py      * OK...
            is 'dummy index' and LICENSE.html gets a 404                * OK...
    * splitTheProject.sh xlattice_py                                    * OK...
        - FAILED because sharedev subdir had not been deleted           * OK...
        - manually fixed but still see 'dummy index' on github.io       * OK...
        - touched *.html in sharedev and then git commit from           * OK...
            sharedev; this worked                                       * OK...

FROM ~/dev/py/u/TODO ================================================

2015-03-19
    * if eg myU2/tmp does not exist, the library must create it         * DONE

2012-07-28
    * FIX: testU256x256.py fails (because testU/tmp does not exist?)    * DONE

2012-07-02
    * added u.getData(uPath, key); needs to be tested

2012-06-02
    * BUG found when attempting to run upaxUpdateNodeID on test:
        copyAndPut invokes put which attempts to rename a temporary
        file into /var/Upax; this yields an 'invalid cross-device link'
        error
        -- FIXED?

    * BUG observed but hasn't caused an error yet: u.put expects input
        file to be in the same file system.

    * lock directory /tmp/u must be world-writeable; the current
        implementation creates world-writeable leaf directories but
        intermediate directories may not be such

2012-05-30
    * consider adding keyless copyAndPut(), put(), and putData(); these
        would have names like putKeyless(), would have no content key
        parameter, but would still return the content key

    * Compare code from xlshadow
