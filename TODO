~/dev/py/xlattice_py/TODO

2017-05-26
    * u_re_struc about L 71: invalid attr dir_struc_to_name

2017-04-15
    * need u_diff which by default assumes leaf hashes are correct

2017-02-18
    * locking for Context must be implemented

2017-02-17
    * in test_context.py about L 65: chaining in ctx99 = ctx2.parent
        has unexpected results

2017-02-12, edited from -11
    * xlattice/node.py hack: drop __init__()s from abstract classes
    * PyCrNode subclasses BaseNode [or AbstactNode]
    * PyCaNode subclasses BaseNode [or AbstactNode]
    * DEFER: split this stuff off as xlnode_py

2017-02-07
    * xlattice/*node.py: AbstractNode should inherit from abc
    * pycrypto version of {Abstract,}Node needs TWO RSA public keys            
    * cryptography version of {Abstract,}Node should be identical 
        except for parts relating to RSA

2017-01-17
    * UDir.DIR_FLAT etc should be deprecated
        - use xlattice.u.DirStruc.DIR_FLAT etc instead
        - phase out UDir.DIR_FLAT etc by xlattice 1.7

2017-01-09
    * add deprecation warnings on all synonyms                          * DONE
            import warnings                                             * DONE
            warnings.warn('deprecated', DeprecationWarning)             * DONE
        - xlattice/crypo.py                                             * DONE
        - xlattice/__init__.py                                          * DONE
        - xlattice/util.py                                              * DONE
    * synonyms should be dropped on second step of minor version number
        - first step  1.6                                               * SEEN
        - second step 1.7 => drop synonyms

2017-01-08
    * there is confusion over the handling of digital signatures:
        - test_pyca_rsa.py assumes that they will be base-64 encoded
        - test_pyca_node.py and xlattice/pyca_node do not use
            base64 encoding

2017-01-07
    * consider using blake2 as alternative hash

2017-01-06
    * need performance figures 
        - hashlib/sha* vs pyca/cryptography sha*

    * create pyca versions of test_node.py,                             * DONE
        xlattice/node.py                                                * DONE
    * add deprecation warnings 
            import warnings
            warnings.warn('deprecated', DeprecationWarning)
        - test_hello_and_reply.py
        - xlattice/hello_and_reply.py
        - test_node.py
        - xlattice/node.py
        - test_pkcs7.py
        - xlattice/pkcs7.py
        - test_rsa.py

2016-12-19
    * get rid of debug messages in xlattice/u/__init__.py
        (search on DO NOT REMOVE THIS CASUALLY)

2016-12-13
    * add code handling SHA{2,3} to gen_node_id
    * rearrange code to collect option collecting into get_args()
        - and various checks into check_args()
    * consider adding eg time-now to hash
    * move the executive code into the xlattice library
    * write test for library function
    * pylint it

2016-11-10, edited from -09
    * github/pyca/cryptography is candidate for replacing pyCrypto
        - write substantial tests of relevant bits of all three
            packages

2016-10-04
    * README also needs better explantion of the function of those
        uitlities

2016-10-22
    * import of sha3 should be conditional: sys.version_info < (3, 6)

2016-10-11
    * uncomment test_u.py::map_test and get it running
    * UStats is skeletal
        - needs to be pylinted

2016-10-09
    * continue pylinting at xlattice/util and test_get_exclusions
    * checkCoverage is incorrectly configured - checks pycrypt,
        rnglib, etc

2016-09-15
    * documentation is ridiculously out of date
    * verifyContentKeys needs some attention

2016-09-15, edited from -06-03, edited from -02
    * the class UDir
        - the constructor should create L,
        - class need to run alongside the existing packages until
            class implementation is complete
    * then modify using projects to use UDir:
        - buildList
        - cljutil
        - bindex
        - magicsack     # modified to use u16
        - upax
    * document all of this

2016-09-09
    * verifyContentKeys does not handle SHA3
        - and otherwise not checked

2016-07-19
    * part of testUStats.py is stubbed; implement it
    * THINK ABOUT THIS: is there any problem with using SHAx_HEX_NONE
        as the signature for usingSHA1?

2016-07-17
    * test uDir.delete()
    * elaborate testing of UStats, getting code for building random
        directory tree from ../nlhtree_py/testDropFromU.py

2016-06-14
    * testU contains many debug comments, needs to be cleaned up

2016-06-03
    * the class UDir
        - the constructor should create L,
        - class need to run alongside the existing packages until
            class implementation is complete
    * then modify using projects to use UDir:
        - buildList
        - cljutil
        - bindex
        - magicsack     # modified to use u16
        - upax
    * document all of this

2016-09-09
    * verifyContentKeys does not handle SHA3
        - and otherwise not checked

2016-07-19
    * part of testUStats.py is stubbed; implement it
    * THINK ABOUT THIS: is there any problem with using SHAx_HEX_NONE
        as the signature for usingSHA1?

2016-07-17
    * test uDir.delete()

    * elaborate testing of UStats, getting code for building random
        directory tree from ../nlhtree_py/testDropFromU.py

2016-06-14
    * testU contains many debug comments, needs to be cleaned up

2016-06-03, edited from -02, edited from -05-11
    * access to the RNG object in xlattice.u.UDir should be
        synchronized

2016-05-10 (edited from 04-17)
    * need comprehensive testSha{1,2,3}.py
        - if possible, this is one big test, or test class with
            children = subclasses

    * need test functions to create randomish
        - u256x256 directories with or without in/, tmp/, L
        - ditto for u16x16
        - ditto for uFLAT

    * this is or could be a library extending rnglib

2016-05-03
    * need uCmp: compares uDirs, for use in testing

2016-04-19
    * testRegexesFromWildcars overlaps with testGetExclusions; fix

2016-04-18
    * uPreen should scan for file name/content key mismatches
        - will be much slower

2016-04-16
    * need utility uWriteable to make all leaf files in U read-only
    * need utility uReadOnly  to make all leaf files in U read-write
    * uConsolidate needs -V/--version option

2016-04-07 (edited from -06)
    * ProcLock should be more 'atomic':
        - write lock file under a different name
        - then rename it to proper name (shortens race period);
        - could read it after creation to confirm PID is as expected
            * raise exception if it fails
        - similary rename it before deleting it
    * eventually need 2-phase lock (lock A,B,C, unlock C,B,A)
        - and a lock daemon

2015-05-14
    * myData/ myU1/ myU2 need to be added to .gitignore,
        which requires a .gitignore-local functionality
    * need test for xlattice.ui (passwdStrength)

FROM ~/dev/py/u/TODO ================================================

2012-07-02
    * added u.getData(uPath, key); needs to be tested

2012-06-02
    * BUG found when attempting to run upaxUpdateNodeID on test:
        copyAndPut invokes put which attempts to rename a temporary
        file into /var/Upax; this yields an 'invalid cross-device link'
        error
        -- FIXED?

    * BUG observed but hasn't caused an error yet: u.put expects input
        file to be in the same file system.

    * lock directory /tmp/u must be world-writeable; the current
        implementation creates world-writeable leaf directories but
        intermediate directories may not be such

2012-05-30
    * consider adding keyless copyAndPut(), put(), and putData(); these
        would have names like putKeyless(), would have no content key
        parameter, but would still return the content key

    * Compare code from xlshadow
