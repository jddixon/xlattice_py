~/dev/py/xlattice_py/TODO

2016-10-11
    * uncomment test_u.py::map_test and get it running
    * UStats is skeletal
        - needs to be pylinted

2016-10-09
    * continue pylinting at xlattice/util and test_get_exclusions
    * checkCoverage is incorrectly configured - checks pycrypt, 
        rnglib, etc

2016-09-15
    * documentation is ridiculously out of date
    * verifyContentKeys needs some attention

2016-09-15, edited from -06-03, edited from -02
    * the class UDir
        - the constructor should create L, 
        - should also create tmp/ and in/ if these to not exist         * DONE
        - class need to run alongside the existing packages until
            class implementation is complete
    * then modify using projects to use UDir:
        - buildList
        - cljutil
        - bindex
        - magicsack     # modified to use u16
        - upax
    * document all of this
    * the separate packages uFlat, u16, and u256 should be dropped      * DONE
        when UDir is stable and all users converted                     * DONE

2016-09-09
    * verifyContentKeys does not handle SHA3
        - and otherwise not checked

2016-07-24
    * get rid of extra subdirs left by uReStruc                         * DONE
2016-07-20
    * DIR_FLAT etc should be a class attribute                          * DONE

2016-07-19
    * part of testUStats.py is stubbed; implement it
    * modify uStats to display discovered dirStruc and usingSHA1        * DONE
    * THINK ABOUT THIS: is there any problem with using SHAx_HEX_NONE
        as the signature for usingSHA1?  

2016-07-19, edit from -18
    * write uReStruc, a tool to restructure a uDir directory to         * DONE
        a different dirStruc                                            * DONE
        - particular interest is in moving DIR_FLAT files into          * DONE
            DIR256x256 subdirectories                                   * DONE
        - pay attention to None files (used to discover whether         * DONE
            usingSHA1)                                                  * DONE
        - files that are in the right place should be left there        * DONE

2016-07-17
    * implement UDir.delete(key), where key is a hex value, returning   * DONE
        False if not present, True otherwise                            * DONE
    * test uDir.delete()

    * elaborate testing of UStats, getting code for building random
        directory tree from ../nlhtree_py/testDropFromU.py

2016-07-15
    * add UStats object with fields                                     * DONE
        - initially subDirCount, subSubDirCount, leafCount, oddCount,   * DONE
            bool hasL, bool hasNodeID                                   * DONE
        - then add minCount (init MAXINT, maxCount (init 0)             * DONE

2016-06-14
    * testU contains many debug comments, needs to be cleaned up

2016-06-03
    * testSHA3_256.py gets an import error                              * FIXED

2016-06-03, edited from -02, edited from -05-11
    * access to the RNG object in xlattice.u.UDir should be 
        synchronized

2016-05-10 (edited from 04-17)
    * need comprehensive testSha{1,2,3}.py
        - if possible, this is one big test, or test class with
            children = subclasses

    * need test functions to create randomish
        - u256x256 directories with or without in/, tmp/, L
        - ditto for u16x16
        - ditto for uFLAT

    * this is or could be a library extending rnglib

2016-05-03
    * need uCmp: compares uDirs, for use in testing

2016-04-19
    * testRegexesFromWildcars overlaps with testGetExclusions; fix

2016-04-18
    * uPreen should scan for file name/content key mismatches
        - will be much slower

2016-04-16
    * need utility uWriteable to make all leaf files in U read-only
    * need utility uReadOnly  to make all leaf files in U read-write
    * uConsolidate needs -V/--version option

2016-04-07 (edited from -06)
    * ProcLock should be more 'atomic': 
        - write lock file under a different name
        - then rename it to proper name (shortens race period); 
        - could read it after creation to confirm PID is as expected
            * raise exception if it fails
        - similary rename it before deleting it
    * eventually need 2-phase lock (lock A,B,C, unlock C,B,A)
        - and a lock daemon

2016-04-06
    * testProcLock.py should wrap call to ProcLockMgr in try/finally    * DONE

2016-04-04
    * integrate in LogMgr or drop testTwoLogs.py                        * ADDED

2016-04-03
    * get rid of warning messages from building extsrc/
    * complete conversion from Python 2.7 to Python 3
    
2016-04-02
    * URGENTLY need testing for cFTLogForPy                             * DONE
    * document cFTLogForPy in {README,index}.py

2016-03-28
    * get SHA3 bits working or just drop (moved here from pzog)
    * add test to test.all when if and when it works 

2015-12-02
    * DecimalVersion should have properties a, b, c, d replacing
        getA(), getB(), etc

2015-11-23
    * by default, print version numbers in three parts, so that
        for example 1 becomes 1.0.0 and 1.2 is printed as 1.2.0
    * so continue to parse eg 1 and 1.0 and 1.0.0 identically, but
        always convert to string as 1.0.0

2015-09-24
    * urgently need API docs

2015-06-10
    * move __SPACES__ and getSpaces from nlhTree to xlattice.crypto     * DONE
        to avoid import loops                                           * DONE
    * write a test                                                      * DONE

    * write test of nextNBLine()
    * write test of collectPEMRSAPublicKey()                            * DONE
    * write collectPEMRSAPrivateKey()
        - and test

2015-06-02
    * needs some documentation, however skimpy

2015-05-22
    * make testRSA.py less talkative                                    * DONE
2015-05-21
    * fileSHA1/2 disambigurated as fileSHA{1,2}{Bin,Hex}                * DONE
2015-05-18
    * mkdir_p needs testing
2015-05-17
    * git push appears to have failed, but with no meaningful error     * FIXED
        message.  xlattice_py on github has myData/ myU1/ myU2/         * FIXED
        trash, which it shouldn't.  URGENT need to reconcile what       * FIXED
        we have here and what is on github                              * FIXED
2015-05-15
    * need myData, myU1, myU2 in .gitignore.local                       * DONE
    * add DecimalVersion.step{Major,Minor,Decimal,Micro}                * DONE
        - and test                                                      * DONE
    * need tests for xlattice/u                                         * DONE
2015-05-14
    * myData/ myU1/ myU2 need to be added to .gitignore,
        which requires a .gitignore-local functionality
    * move SHA1* constants to xlattice package                          * DONE
    * need test for xlattice.ui (passwdStrength)
2015-05-11
    * gittifyProject.sh  xlattice_py >& junk.gittify                    * DONE
    * ghpTheProject.sh   xlattice_py >& junk.ghp                        * DONE
        - seems OK but index.html at jddixon.github.io/xlattice_py      * OK...
            is 'dummy index' and LICENSE.html gets a 404                * OK...
    * splitTheProject.sh xlattice_py                                    * OK...
        - FAILED because sharedev subdir had not been deleted           * OK...
        - manually fixed but still see 'dummy index' on github.io       * OK...
        - touched *.html in sharedev and then git commit from           * OK...
            sharedev; this worked                                       * OK...

FROM ~/dev/py/u/TODO ================================================

2015-03-19
    * if eg myU2/tmp does not exist, the library must create it         * DONE

2012-07-28 
    * FIX: testU256x256.py fails (because testU/tmp does not exist?)    * DONE

2012-07-02
    * added u.getData(uPath, key); needs to be tested

2012-06-02
    * BUG found when attempting to run upaxUpdateNodeID on test:
        copyAndPut invokes put which attempts to rename a temporary 
        file into /var/Upax; this yields an 'invalid cross-device link' 
        error 
        -- FIXED?

    * BUG observed but hasn't caused an error yet: u.put expects input
        file to be in the same file system.

    * lock directory /tmp/u must be world-writeable; the current 
        implementation creates world-writeable leaf directories but 
        intermediate directories may not be such

2012-05-30
    * consider adding keyless copyAndPut(), put(), and putData(); these 
        would have names like putKeyless(), would have no content key
        parameter, but would still return the content key

    * Compare code from xlshadow 
