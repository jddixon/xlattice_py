#!/usr/bin/python3

# ~/dev/py/xlattice_py/uStats

import os
import stat
import sys
from argparse import ArgumentParser

from xlattice import (__version__, __version_date__)
from xlattice.stats import collectStats


def doRun(options):

    uDir = options.uDir
    outDir = options.outDir
    verbose = options.verbose

    # XXX options.outDir currently ignored

    # returns a UStats object 
    s = collectStats(uDir, outDir, verbose)

    if verbose:
        print("statistics for %s" % uDir)

    print("  subDirectories:     %10d" % s.subDirCount)
    print("  subSubDirectories:  %10d" % s.subSubDirCount)
    print("  leaf files:         %10d" % s.leafCount)
    print("  odd files:          %10d" % s.oddCount)
    if s.minLeafBytes != sys.maxsize:
        print("  smallest leaf file: %10d" % s.minLeafBytes)
    print("  largest leaf file:  %10d" % s.maxLeafBytes)


    if s.hasL:
        print("  L present")
    if s.hasNodeID:
        print("  nodeID present")


def main():

    # program defaults ----------------------------------------------

    # parse the command line ----------------------------------------
    DESC = 'display statistical information on uDir'
    parser = ArgumentParser(description=DESC)

    parser.add_argument('-j', '--justShow', action='store_true',
                        help='show options and exit')

    parser.add_argument('-o', '--outDir', type=str,
                        help='destination directory')

    parser.add_argument('-u', '--uDir', default='/var/U',
                        help="source U directory (default=/var/U) ")

    parser.add_argument('-v', '--verbose', action='store_true',
                        help='be chatty')

    args = parser.parse_args()

    # fixups --------------------------------------------------------

    # sanity checks -------------------------------------------------

    if not args.uDir or not os.path.exists(args.uDir):
        print("input directory '%s' does not exist" % args.uDir)
        parser.print_help()
        sys.exit(1)

    if args.outDir and not os.path.exists(args.outDir):
        print("output directory '%s' does not exist" % args.outDir)
        parser.print_help()
        sys.exit(1)

    # complete setup ------------------------------------------------
    appName = 'uStats %s' % __version__

    # maybe show options and such -----------------------------------
    if args.verbose or args.justShow:
        print("%s %s" % (appName, __version_date__))

    if args.verbose or args.justShow:
        print('outDir       = ' + str(args.outDir))
        print('justShow     = ' + str(args.justShow))
        print('uDir         = ' + str(args.uDir))
        print('verbose      = ' + str(args.verbose))

    if args.justShow:
        sys.exit(0)

    # do what's required --------------------------------------------
    doRun(args)


if __name__ == '__main__':
    main()
