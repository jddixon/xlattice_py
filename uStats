#!/usr/bin/python3

# ~/dev/py/xlattice_py/uStats

import os
import stat
import sys
from argparse import ArgumentParser

from xlattice import (__version__, __version_date__, Q)
from xlattice.stats import collectStats
from xlattice.u import UDir


def doRun(options):

    uPath = options.uPath
    outPath = options.outPath
    verbose = options.verbose

    # XXX options.outPath currently ignored

    # returns a UStats object
    s = collectStats(uPath, outPath, verbose)

    print("statistics for %s" % uPath)
    print("  dirStruc:           %10s" % UDir.dirStrucToName(s.dirStruc))
    print("  usingSHA:          %10s" % s.usingSHA)
    print()
    print("  subDirectories:     %10d" % s.subDirCount)
    print("  subSubDirectories:  %10d" % s.subSubDirCount)
    print("  leaf files:         %10d" % s.leafCount)
    print("  odd files:          %10d" % s.oddCount)

    if s.minLeafBytes != sys.maxsize:
        print("  smallest leaf file: %10d" % s.minLeafBytes)
    print("  largest leaf file:  %10d" % s.maxLeafBytes)

    if s.hasL:
        print("  L present")
    if s.hasNodeID:
        print("  nodeID present")

    if verbose:
        if s._unexpectedAtTop:
            print("\nunexpected at top (%d)" % len(s._unexpectedAtTop))
            for x in s._unexpectedAtTop:
                print("  %s" % x)
    else:
        print("  unexpected at top:  %10d" % len(s._unexpectedAtTop))


def main():

    # program defaults ----------------------------------------------

    # parse the command line ----------------------------------------
    DESC = 'display statistical information on uPath'
    parser = ArgumentParser(description=DESC)

    parser.add_argument('-j', '--justShow', action='store_true',
                        help='show options and exit')

    parser.add_argument('-o', '--outPath', type=str,
                        help='destination directory')

    parser.add_argument('-u', '--uPath', default='/var/U',
                        help="source U directory (default=/var/U) ")

    parser.add_argument('-v', '--verbose', action='store_true',
                        help='be chatty')

    args = parser.parse_args()

    # fixups --------------------------------------------------------

    # sanity checks -------------------------------------------------

    if not args.uPath or not os.path.exists(args.uPath):
        print("input directory '%s' does not exist" % args.uPath)
        parser.print_help()
        sys.exit(1)

    if args.outPath and not os.path.exists(args.outPath):
        print("output directory '%s' does not exist" % args.outPath)
        parser.print_help()
        sys.exit(1)

    # complete setup ------------------------------------------------
    appName = 'uStats %s' % __version__

    # maybe show options and such -----------------------------------
    if args.verbose or args.justShow:
        print("%s %s" % (appName, __version_date__))

    if args.verbose or args.justShow:
        print('justShow     = ' + str(args.justShow))
        print('outPath      = ' + str(args.outPath))
        print('uPath        = ' + str(args.uPath))
        print('verbose      = ' + str(args.verbose))

    if args.justShow:
        sys.exit(0)

    # do what's required --------------------------------------------
    doRun(args)


if __name__ == '__main__':
    main()
